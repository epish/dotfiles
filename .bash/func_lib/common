# common functions
hsearch() { history | grep $1 | grep -v hsearch; }

function phpstrict() {
	if [ "$1" != "" ]
	then
		'php' -d error_reporting=2048 -f $1
	else
		echo "Usage: phpstrict <file>"
	fi
}

function cdl() {
	'cd' $1
	'ls' -Ahlrtp --color=always
}

function mkcd()
{
	'mkdir' $*
	'cd' ${@: -1}
}

#Better Console Calculator Using bc
function calc
{
  echo "${1}" | bc -l;
}

function rename_all()
{
    regex=$1
    replace=$2
    find . -name "*$regex*" | sed -e "p;s/$regex/$replace/" | xargs -n2 mv
}

colors() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37} # white
			bgc=${bgc#40} # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}

			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf " ${seq0}TEXT\e[m"
			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}
#
function human() {
    arg_array=$( printf "%s," "$@" )
    awk -v h_args="$arg_array" '
            BEGIN {
                split(h_args,h_array,",")
                for (i = 1; i in h_array; i++){
                    HR[h_array[i]]=1;
                }
            }
            {
            for ( x=1 ; x<=NF ; x++ ){
                if (NR!=1 && HR[x]==1) {
                    printf ("%-4.2f %s ", $x/1024, "MB");
                } else {
                    printf ("%-9s ",$x) };
                }
            print ("")
    }'
}
# vim: set syn=sh :
